# Use a Node.js base image for building the frontend app
FROM node:18-alpine AS build

# Set the working directory inside the container
WORKDIR /app

# Copy package.json and package-lock.json from the client directory
COPY package*.json ./

# Install dependencies with legacy-peer-deps option
RUN npm install --legacy-peer-deps

# Copy the client code and public assets into the container
COPY . .    

# Build the frontend app
RUN npm run build

# Use a minimal Node.js image to serve the app in production
FROM node:18-alpine AS production

# Set the working directory inside the container
WORKDIR /app

# Copy the built app from the build stage
COPY --from=build /app/.next /app/.next
COPY --from=build /app/public /app/public  
COPY --from=build /app/package*.json /app/

# Install only production dependencies
RUN npm install --only=production --legacy-peer-deps

# Expose the port the app will run on
EXPOSE 3000

# Start the app in production mode
CMD ["npm", "run", "start"]
